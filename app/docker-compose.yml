x-common-volumes: &common-volumes
  - ./:/MoneyPrinterTurbo:rw
  - ./storage:/MoneyPrinterTurbo/storage:rw

services:
  webui:
    build:
      context: .
      dockerfile: Dockerfile
    image: moneyprinterturbo-webui:latest
    container_name: moneyprinterturbo-webui-new
    ports:
      - "8501:8501"
    command: [ "streamlit", "run", "./webui/Main.py", "--browser.serverAddress=0.0.0.0", "--server.enableCORS=True", "--browser.gatherUsageStats=False" ]
    volumes: 
      - ./:/MoneyPrinterTurbo:rw
      - ./storage:/MoneyPrinterTurbo/storage:rw
    restart: unless-stopped
    environment:
      - PYTHONPATH=/MoneyPrinterTurbo
      - HOST=0.0.0.0
      - PORT=8501
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: moneyprinterturbo-api:latest
    container_name: moneyprinterturbo-api-new
    ports:
      - "8080:8080"
    command: [ 
      "python3", "-m", "uvicorn", "app.main:app", 
      "--host", "0.0.0.0", 
      "--port", "8080",
      "--workers", "4",
      "--worker-class", "uvicorn.workers.UvicornWorker",
      "--access-log",
      "--log-level", "info"
    ]
    volumes:
      - ./storage:/MoneyPrinterTurbo/storage:rw
    restart: unless-stopped
    environment:
      - PYTHONPATH=/MoneyPrinterTurbo
      - HOST=0.0.0.0
      - PORT=8080
      - ENVIRONMENT=production
      - ALLOWED_ORIGINS=http://localhost:8501,http://localhost:3000
      - TRUSTED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  redis:
    image: redis:alpine
    container_name: moneyprinterturbo-redis-new
    restart: always
    # Expose Redis port internally only to avoid host port conflicts
    expose:
      - "6379"
    command: [
      "redis-server",
      "--maxmemory", "256mb",
      "--maxmemory-policy", "allkeys-lru",
      "--appendonly", "yes",
      "--save", "60", "1000"
    ]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
