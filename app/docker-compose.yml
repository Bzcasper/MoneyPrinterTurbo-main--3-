x-common-volumes: &common-volumes
  - ../:/MoneyPrinterTurbo:rw
  - ../storage:/MoneyPrinterTurbo/storage:rw

services:
  webui:
    build:
      context: ..
      dockerfile: app/Dockerfile
    image: moneyprinterturbo-webui:latest
    container_name: moneyprinterturbo-webui-new
    ports:
      - "8501:8501"
    command: ["/MoneyPrinterTurbo/start_webui.sh"]
    volumes: *common-volumes
    restart: unless-stopped
    env_file:
      - ../.env
    environment:
      - PYTHONPATH=/MoneyPrinterTurbo
      - HOST=0.0.0.0
      - PORT=8501
      - STREAMLIT_SERVER_FILE_WATCHER_TYPE=none
      - DATABASE_URL=postgresql://postgres.dlblqryvyavvveawduct:Bcmoney69$@aws-0-us-east-2.pooler.supabase.com:6543/postgres
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  api:
    build:
      context: ..
      dockerfile: app/Dockerfile
    image: moneyprinterturbo-api:latest
    container_name: moneyprinterturbo-api-new
    ports:
      - "8080:8080"
    command: ["/MoneyPrinterTurbo/start_api.sh"]
    volumes: *common-volumes
    restart: unless-stopped
    env_file:
      - ../.env
    environment:
      - PYTHONPATH=/MoneyPrinterTurbo
      - HOST=0.0.0.0
      - PORT=8080
      - ENVIRONMENT=production
      - ALLOWED_ORIGINS=http://localhost:8501,http://localhost:3000
      - TRUSTED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DATABASE_URL=postgresql://postgres.dlblqryvyavvveawduct:Bcmoney69$@aws-0-us-east-2.pooler.supabase.com:6543/postgres
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  redis:
    image: redis:7-alpine
    container_name: moneyprinterturbo-redis-new
    restart: unless-stopped
    expose:
      - "6379"
    command:
      - redis-server
      - --maxmemory
      - 512mb
      - --maxmemory-policy
      - allkeys-lru
      - --appendonly
      - yes
      - --save
      - "60"
      - "1000"
      - --tcp-keepalive
      - "60"
      - --timeout
      - "0"
      - --tcp-backlog
      - "511"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  mcp-server:
    build:
      context: ..
      dockerfile: app/Dockerfile
    image: moneyprinterturbo-mcp:latest
    container_name: moneyprinterturbo-mcp-new
    ports:
      - "8081:8081"
    command: ["python3", "-c", "import asyncio; import os; from app.mcp.server import MCPServer; asyncio.run(MCPServer(host=os.getenv('MCP_HOST', '0.0.0.0'), port=int(os.getenv('MCP_PORT', 8081))).start_server())"]
    volumes: *common-volumes
    restart: unless-stopped
    environment:
      - PYTHONPATH=/MoneyPrinterTurbo
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8081
      - ENVIRONMENT=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ENABLE_REDIS=true
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python3", "-c", "import socket; sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM); result = sock.connect_ex(('localhost', 8081)); sock.close(); exit(0 if result == 0 else 1)"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  db:
    image: postgres:15-alpine
    container_name: moneyprinterturbo-postgres-new
    restart: always
    environment:
      - POSTGRES_USER=robertmcasper@gmail.com
      - POSTGRES_PASSWORD=Bcmoney69$
      - POSTGRES_DB=robertmcasper@gmail.com
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local